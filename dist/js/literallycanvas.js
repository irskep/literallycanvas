(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";
window.LC = {
  shape: require("./shape/base"),
  renderer: {canvasRenderer: require("./renderer/canvasRenderer")}
};

//# sourceURL=/Users/steve/dev/literallycanvas/src/index.jsx
},{"./renderer/canvasRenderer":2,"./shape/base":3}],2:[function(require,module,exports){
"use strict";
"use strict";
var canvasRendererNamespace = {registry: {}};
var registerCanvasRenderer = canvasRendererNamespace.registerCanvasRenderer = function(typeId, renderShape) {
  canvasRendererNamespace.registry[typeId] = renderShape;
};
canvasRendererNamespace.renderShapeToCanvas = function(shape, ctx) {
  if (!canvasRendererNamespace.registry[shape.typeId]) {
    throw ("There is no renderer for " + shape.typeId);
  }
  canvasRendererNamespace.registry[shape.typeId](shape, ctx);
};
registerCanvasRenderer('Rectangle', function(shape, ctx) {
  var s = shape.attributes.style;
  var d = shape.attributes.dimensions;
  if (s.fillColor) {
    ctx.fillStyle = s.fillColor;
    ctx.fillRect(d.xmin, d.ymin, d.xmax - d.xmin, d.ymax - d.ymin);
  }
  if (s.strokeColor && s.strokeWidth) {
    ctx.lineWidth = s.strokeWidth;
    ctx.strokeStyle = s.strokeColor;
    if (s.strokeWidth % 2 == 0) {
      ctx.strokeRect(d.xmin, d.ymin, d.xmax - d.xmin, d.ymax - d.ymin);
    } else {
      ctx.strokeRect(d.xmin + 0.5, d.ymin + 0.5, d.xmax - d.xmin, d.ymax - d.ymin);
    }
  }
});
module.exports = canvasRendererNamespace;

//# sourceURL=/Users/steve/dev/literallycanvas/src/renderer/canvasRenderer.js
},{}],3:[function(require,module,exports){
"use strict";
"use strict";
var shapeNamespace = {registry: {}};
var s4 = function() {
  return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
};
var getGUID = function() {
  return (s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4());
};
var Shape = shapeNamespace.Shape = (function() {
  var Shape = function Shape(typeId, attributes, id) {
    if (!typeId || !id || !attributes) {
      throw "Shapes must be initialized with attributes.";
    }
    this.typeId = typeId;
    this.id = id;
    this.attributes = attributes;
  };
  return ($traceurRuntime.createClass)(Shape, {}, {});
}());
var registerShape = shapeNamespace.registerShape = function(typeId, cls) {
  shapeNamespace.registry[typeId] = cls;
};
var createShape = shapeNamespace.createShape = function(typeId, attributes, id) {
  if (!shapeNamespace.registry[typeId]) {
    throw ("There is no shape type " + typeId);
  }
  if (!id)
    id = getGUID();
  return new shapeNamespace.registry[typeId](typeId, attributes, id);
};
registerShape('Rectangle', (function($__super) {
  var Rectangle = function Rectangle() {
    $traceurRuntime.superConstructor(Rectangle).apply(this, arguments);
  };
  return ($traceurRuntime.createClass)(Rectangle, {}, {}, $__super);
}(Shape)));
registerShape('Ellipse', (function($__super) {
  var Ellipse = function Ellipse() {
    $traceurRuntime.superConstructor(Ellipse).apply(this, arguments);
  };
  return ($traceurRuntime.createClass)(Ellipse, {}, {}, $__super);
}(Shape)));
registerShape('Path', (function($__super) {
  var Path = function Path() {
    $traceurRuntime.superConstructor(Path).apply(this, arguments);
  };
  return ($traceurRuntime.createClass)(Path, {}, {}, $__super);
}(Shape)));
registerShape('SmoothedPath', (function($__super) {
  var SmoothedPath = function SmoothedPath() {
    $traceurRuntime.superConstructor(SmoothedPath).apply(this, arguments);
  };
  return ($traceurRuntime.createClass)(SmoothedPath, {}, {}, $__super);
}(Shape)));
registerShape('Bezier', (function($__super) {
  var Bezier = function Bezier() {
    $traceurRuntime.superConstructor(Bezier).apply(this, arguments);
  };
  return ($traceurRuntime.createClass)(Bezier, {}, {}, $__super);
}(Shape)));
module.exports = shapeNamespace;

//# sourceURL=/Users/steve/dev/literallycanvas/src/shape/base.js
},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
