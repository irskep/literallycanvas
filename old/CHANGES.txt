v0.4.2:
 * lc.getSVGString()
 * LC.setTool() is part of the public API
 * Improved behavior when dragging outside the LC div while drawing
 * backgroundColor initialization option works
 * Allow transparent stroke and fill colors

v0.4.1:
 * Watermark can be included in image output with
   getImage({includeWatermark: true})
 * Line tool allows dashes, arrows
 * LinePathShape can be used without smoothing; set
   {smooth: false}
 * New icons for undo/redo
 * Tooltips everywhere
 * getImage() scales for retina correctly
 * Watermark no longer requires user input to render if image isn't
   loaded at init time
 * Dragging off the canvas while drawing no longer results in a crazy
   line

v0.4:
 * New GUI using React.js
 * Simplified color picker
 * Removed jQuery dependency, though the plugin works if jQuery is present
 * Performance improvements
   * Line path adds points in constant time
   * Line path throttles mouse events
   * requestAnimationFrame is used
 * Retina display rendering is the correct size instead of being scaled up
   half-resolution
 * Code is browserified; can still be used as a standalone script
 * Overhauled API for defining tools and shapes (see docs)
 * Backgrounds and watermarks are no longer affected by the eraser
 * No DOM is preserved inside the container div at all
 * LiterallyCanvas class API
   * Removed preserveCanvasContents option
   * watermarkScale option
   * 'toolClasses' option has been replace with 'tools' option
   * Constructor takes (containerElement, opts) instead of (canvas, opts)
   * API for subscribing/unsubscribing event listeners has changed (see #130)
   * Redraw layers ('main' or 'background') with repaintLayer(layerName);
     repaint everything with repaintAllLayers(). Removed repaint().
   * getImage() allows rendering drawing at any scale clipped to any rect. Old
     canvasForExport() and canvasWithBackground() are deprecated.
   * setPan() and setZoom() can set position and zoom values directly, in
     addition to the old pan() and zoom() that move them by relative values.
   * getContentBounds() returns the bounding rect of all shapes
 * LC.util functions
   * sizeToContainer() removed in favor of matchElementSize()
   * renderShapes() renders any list of shapes to a canvas, without having to
      instantiate LiterallyCanvas
   * getBoundingRect(listOfRects)
 * Reorganized top-level API on window.LC or require('literallycanvas')
   LC.init()
   LC.registerJQueryPlugin()
   LC.util
   LC.tools
   LC.defineOptionsStyle()
   LC.defineShape()
   LC.createShape()
   LC.JSONToShape()
   LC.shapeToJSON()
   LC.setDefaultImageURLPrefix()
 * Support for fixed size drawing area
 * Basic localization support
 * Added ellipse tool
 * Event handling bug fixes

v0.3:
 * LiterallyCanvas.canvasWithBackground() renders the current drawing over a
   background image
 * Save/load to/from JSON
 * Text tool
 * New events
 * preserveCanvasContents option
 * Image shape (no corresponding tool yet)
 * Split code into jQuery plugin and core code
 * Remove Underscore dependency
 * Support IE Mobile (probably)

v0.2.1:
 * Redo toolbar/CSS markup
 * Drop fat version of build
 * Allow changing background color

v0.2:
 * Speed improvements
 * Line tool
 * Rectangle tool
 * Better iOS support (fix several bugs)
 * Toolbar style tweaks
 * Replace Imgur stuff with canvasForExport()

v0.1: Initial release
